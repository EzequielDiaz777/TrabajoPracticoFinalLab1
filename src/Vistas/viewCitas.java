package Vistas;

import Controladores.CentroDeVacunacionData;
import Controladores.CitaDeVacunacionData;
import Controladores.DosisData;
import Controladores.PersonaData;
import Modelos.CentroDeVacunacion;
import Modelos.CitaDeVacunacion;
import Modelos.Dosis;
import Modelos.Persona;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Grupo2
 */
public class viewCitas extends javax.swing.JInternalFrame {

    private PersonaData personaData;
    private CentroDeVacunacionData centroDeVacunacionData;
    private DosisData dosisData;
    private CitaDeVacunacionData citaDeVacunacionData;

    /**
     * Creates new form viewCitas
     *
     * @param personaData
     * @param centroDeVacunacionData
     * @param dosisData
     * @param citaDeVacunacionData
     */
    public viewCitas(PersonaData personaData, CentroDeVacunacionData centroDeVacunacionData, DosisData dosisData, CitaDeVacunacionData citaDeVacunacionData) {
        initComponents();
        this.personaData = personaData;
        this.centroDeVacunacionData = centroDeVacunacionData;
        this.dosisData = dosisData;
        this.citaDeVacunacionData = citaDeVacunacionData;
        rellenarComboBoxPersona();
        rellenarComboBoxCentroDeVacunacion();
        rellenarComboBoxDosis();
    }

    public void mensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    public void guardarCita() {
        try {
            LocalDate fecha = jdcFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalTime hora = LocalTime.parse(String.valueOf(jsfHora.getValue() + ":00:00"));
            if (LocalDate.now().isAfter(fecha)) {
                mensaje("La fecha ingresada es anterior a la fecha actual, por favor modifique la fecha.");
                return;
            }
            Persona persona = (Persona) jcbPersonas.getSelectedItem();
            CentroDeVacunacion centroDeVacunacion = (CentroDeVacunacion) jcbCentroDeVacunacion.getSelectedItem();
            Dosis dosis = (Dosis) jcbDosis.getSelectedItem();
            CitaDeVacunacion citaDeVacunacion = new CitaDeVacunacion(fecha, hora, jcbEstado.isSelected(), centroDeVacunacion, persona, dosis);
            citaDeVacunacionData.guardarCitaDeVacunacion(citaDeVacunacion);
            dosis.setEstado(false);
            dosisData.actualizarDosis(dosis);
            rellenarComboBoxPersona();
            rellenarComboBoxCentroDeVacunacion();
            rellenarComboBoxDosis();
            jcbEstado.setSelected(false);
        } catch (NullPointerException npe) {
            mensaje("Seleccione una fecha mayor a la actual.");
        } catch (DateTimeParseException dtpe) {
            mensaje("La hora de la cita debe encontrarse entre las 9 y las 18.");
        }
    }

    
    
    public void rellenarComboBoxPersona() {
        jcbPersonas.removeAllItems();
        ArrayList<Persona> listado = personaData.obtenerPersonas();
        if (listado.isEmpty()) {
            mensaje("Antes de crear una cita debe agregar una persona a la BD");
        }
        for (int i = 0; i < listado.size(); i++) {
            jcbPersonas.addItem(listado.get(i));
        }
    }

    public void rellenarComboBoxCentroDeVacunacion() {
        jcbCentroDeVacunacion.removeAllItems();
        ArrayList<CentroDeVacunacion> listado = centroDeVacunacionData.obtenerCentrosDeVacunaciones();
        if (listado.isEmpty()) {
            mensaje("Antes de crear una cita debe agregar un centro de vacunacion a la BD");
        }
        for (int i = 0; i < listado.size(); i++) {
            jcbCentroDeVacunacion.addItem(listado.get(i));
        }
    }

    public void rellenarComboBoxDosis() {
        jcbDosis.removeAllItems();
        ArrayList<Dosis> listado = dosisData.obtenerDosis();
        if (listado.isEmpty()) {
            mensaje("Antes de crear una cita debe agregar una dosis a la BD");
        }
        for (int i = 0; i < listado.size(); i++) {
            if (listado.get(i).isEstado()) {
                jcbDosis.addItem(listado.get(i));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlEstado = new javax.swing.JLabel();
        jlCrearCitaDeVacunacion = new javax.swing.JLabel();
        jlDosis = new javax.swing.JLabel();
        jcbDosis = new javax.swing.JComboBox<>();
        jbAgregar = new javax.swing.JButton();
        jlCentroDeVacunacion = new javax.swing.JLabel();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jlPersona = new javax.swing.JLabel();
        jcbPersonas = new javax.swing.JComboBox<>();
        jcbCentroDeVacunacion = new javax.swing.JComboBox<>();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jlHora = new javax.swing.JLabel();
        jlFecha = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JCheckBox();
        jsfHora = new com.toedter.components.JSpinField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jlEstado.setText("Estado de la cita:");

        jlCrearCitaDeVacunacion.setText("Citas de vacunacion");

        jlDosis.setText("Dosis:");

        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jlCentroDeVacunacion.setText("Centro de vacunaci√≥n:");

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jlPersona.setText("Persona:");

        jlHora.setText("Hora:");

        jlFecha.setText("Fecha:");

        jsfHora.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jsfHoraPropertyChange(evt);
            }
        });

        jButton1.setText("Eliminar");

        jLabel1.setText("Llene los campos y luego haga click en 'Agregar' para reservar una cita.");

        jLabel2.setText("Para eliminar una cita seleccione a una persona que posea una cita y clicke en 'Eliminar'.");

        jLabel3.setText("Para limpiar todos los campos haga click en el boton 'Limpiar'.");

        jLabel4.setText("Para salir haga click en el boton 'Salir'.");

        jLabel5.setText("Para saber si posee cita simplemente haga click en una persona y si muesta datos es que ya tiene una cita reservada");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlCentroDeVacunacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbCentroDeVacunacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlPersona)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbPersonas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlHora)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jsfHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlEstado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbEstado))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlDosis)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jlCrearCitaDeVacunacion))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jlCrearCitaDeVacunacion)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPersona)
                    .addComponent(jcbPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCentroDeVacunacion)
                    .addComponent(jcbCentroDeVacunacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jdcFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jlHora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jsfHora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jbAgregar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbDosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDosis))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(36, 36, 36)))
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbEstado)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbLimpiar)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        guardarCita();
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed

    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jsfHoraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jsfHoraPropertyChange

    }//GEN-LAST:event_jsfHoraPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<CentroDeVacunacion> jcbCentroDeVacunacion;
    private javax.swing.JComboBox<Dosis> jcbDosis;
    private javax.swing.JCheckBox jcbEstado;
    private javax.swing.JComboBox<Persona> jcbPersonas;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JLabel jlCentroDeVacunacion;
    private javax.swing.JLabel jlCrearCitaDeVacunacion;
    private javax.swing.JLabel jlDosis;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlFecha;
    private javax.swing.JLabel jlHora;
    private javax.swing.JLabel jlPersona;
    private com.toedter.components.JSpinField jsfHora;
    // End of variables declaration//GEN-END:variables
}
