/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.PatologiaData;
import Modelos.Patologia;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class viewPatologias extends javax.swing.JInternalFrame {
private PatologiaData patologiaData;
private DefaultTableModel modelo;
    /**
     * Creates new form viewPatologias
     */
    public viewPatologias(PatologiaData patologiaData) {
        initComponents();
        this.patologiaData=patologiaData;
        modelo = new DefaultTableModel();
        armarCabeceraTabla();
        borrarFilas();
        cargarPatologias();
        }
    public void armarCabeceraTabla(){
        ArrayList<Object> columnas = new ArrayList<>();
         columnas.add("ID");
         columnas.add("Patologia");
         for(Object it: columnas){
             
             modelo.addColumn(it);
         }
         jtListado.setModel(modelo);
    
}
    public void cargarPatologias(){
                      
        ArrayList<Patologia> listaPatologias = patologiaData.obtenerPatologias();
        
        for(Patologia p: listaPatologias){
            modelo.addRow(new Object[]{p.getIdPatologia(), p.getNombrePatologia()});
        }
       
    }
    public void borrarFilas(){
         int nFilas = modelo.getRowCount() - 1;
        
        for(int i = nFilas; i >= 0; i--){
            modelo.removeRow(i);
        }
    }
public void guardarPatologia(){
        Patologia pato=new Patologia(jtNombre.getText());
        patologiaData.guardarPatologia(pato);
        jtNombre.setText("");
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtListado = new javax.swing.JTable();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setText("MANEJO DE PATOLOGIAS");

        jLabel2.setText("NOMBRE DE PATOLOGIA:");

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });
        jbGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbGuardarKeyPressed(evt);
            }
        });

        jbBorrar.setText("Borrar");
        jbBorrar.setEnabled(false);
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbActualizar.setText("Actualizar");
        jbActualizar.setEnabled(false);
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jtListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtListado);

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Lupa miniatura.png"))); // NOI18N
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbBuscar))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(jbBorrar)
                                .addGap(18, 18, 18)
                                .addComponent(jbActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(jbCancelar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbBorrar)
                    .addComponent(jbActualizar)
                    .addComponent(jbCancelar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if (jtNombre.getText().trim().length() == 0 ){
                JOptionPane.showMessageDialog(this, "Falta completar campos.");
            } else {
                guardarPatologia();
                borrarFilas();
                cargarPatologias();
         }
               
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        
        if(jtListado.getSelectedRow() != -1){
        jbGuardar.setEnabled(false);
        int fila=jtListado.getSelectedRow();
        int columna= (int)jtListado.getValueAt(fila, 0);
        Patologia pato=patologiaData.buscarPatologia(columna);
        jtNombre.setText(pato.getNombrePatologia());
        borrarFilas();
        modelo.addRow(new Object[]{pato.getIdPatologia(), pato.getNombrePatologia()});
                
        jbBorrar.setEnabled(true);
        jbActualizar.setEnabled(true);
        jbCancelar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, "Primero seleccione de la lista");
            jtNombre.setText("");
            jtNombre.requestFocus();
        }        
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        jtNombre.setText("");
            jtNombre.requestFocus();
            jbGuardar.setEnabled(true);
            jbBorrar.setEnabled(false);
        jbActualizar.setEnabled(false);
        jbCancelar.setEnabled(false);
        borrarFilas();
        cargarPatologias();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        if(jtListado.getSelectedRow() != -1){
        int fila=jtListado.getSelectedRow();
        int columna= (int)jtListado.getValueAt(fila, 0);
        patologiaData.borrarPatologia(columna);
        jtNombre.setText("");
        jbGuardar.setEnabled(true);
        jbBorrar.setEnabled(false);
        jbActualizar.setEnabled(false);
        jbCancelar.setEnabled(false);
        borrarFilas();
        cargarPatologias();
        }else{
            JOptionPane.showMessageDialog(this, "Para confirmar seleccione de la lista");
            jtNombre.requestFocus();
        }        
    }//GEN-LAST:event_jbBorrarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        if(jtListado.getSelectedRow() != -1){
        int fila=jtListado.getSelectedRow();
        int columna= (int)jtListado.getValueAt(fila, 0);
        String columnaNombre = (String)jtListado.getValueAt(fila, 1);
        Patologia pato = new Patologia(columna,columnaNombre);
        pato.setNombrePatologia(jtNombre.getText());
        patologiaData.actualizarNombreDeLaPatologia(pato);
        jtNombre.setText("");
        jbGuardar.setEnabled(true);
        jbBorrar.setEnabled(false);
        jbActualizar.setEnabled(false);
        jbCancelar.setEnabled(false);
        borrarFilas();
        cargarPatologias();
        }else{
            JOptionPane.showMessageDialog(this, "Para confirmar seleccione de la lista");
            jtNombre.requestFocus();
        }
        
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbGuardarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jtNombre.getText().trim().length() == 0 ){
                JOptionPane.showMessageDialog(this, "Falta completar campos.");
            } else {
                guardarPatologia();
            }
        }
    }//GEN-LAST:event_jbGuardarKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JTable jtListado;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}
